//
//  CreateOrderInteractor.swift
//  CleanSwiftTry
//
//  Created by Kaushal Elsewhere on 10/05/2017.
//  Copyright (c) 2017 Elsewhere. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CreateOrderInteractorInput {
    var shippingMethods: [String] { get }
    
    func calculatePrice(_ request: CreateOrder_Price_Request)
    
    
    func doSomething(_ request: CreateOrder.Something.Request)
}

protocol CreateOrderInteractorOutput {
    func presentPrice(_ resonse: CreateOrder_Price_Response)
    
    func presentSomething(_ response: CreateOrder.Something.Response)
}

class CreateOrderInteractor: CreateOrderInteractorInput {
    var output: CreateOrderInteractorOutput!
    var worker: CreateOrderWorker!
    
    var shippingMethods = [
        "Pickup",
        "Domestic Delivery",
        "International Delivery"
    ]
  
    internal var prices = [10, 20, 30]
    
    // MARK: - Business logic
    func doSomething(_ request: CreateOrder.Something.Request) {
        // NOTE: Create some Worker to do the work

        worker = CreateOrderWorker()
        worker.doSomeWork()

        // NOTE: Pass the result to the Presenter
        let response = CreateOrder.Something.Response()
        output.presentSomething(response)
    }
    
    func calculatePrice(_ request: CreateOrder_Price_Request) {
        let response = CreateOrder_Price_Response(price: prices[request.selectedIndex])
        output.presentPrice(response)
    }
}
